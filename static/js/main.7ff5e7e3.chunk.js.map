{"version":3,"sources":["style/todo.module.scss","components/link/link.module.scss","components/add-panel/add-panel.module.scss","components/input/input.module.scss","components/list-item/list-item.module.scss","style/list.module.scss","components/button/button.module.scss","reportWebVitals.js","components/link/Link.js","components/link/HomeButton.js","data/todos.js","pages/Todo.js","components/button/Button.js","components/input/Input.js","components/add-panel/AddPanel.js","components/list-item/ListItem.js","pages/TodoList.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LinkButton","href","title","color","classname","checkColor","to","className","styles","link","HomeButton","home","todos","id","done","important","description","Todo","useParams","find","item","container","tags","ActionButton","props","btn","Input","type","name","label","input","for","checkbox","AddPanel","addTodo","handleClose","useState","formValues","setFormValues","handleInputChange","event","value","target","checked","onClick","close","placeholder","required","onChange","rows","add","JSON","stringify","Date","now","ListItem","todo","handleChange","style","opacity","defaultChecked","TodoList","todoList","setTodoList","isDisplayed","setIsDisplayed","doneItems","filter","sortedList","sort","todoA","todoB","concat","header","width","map","updatedTodoList","changeTodoState","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ff5e7e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"todo_container__1YDj1\",\"tags\":\"todo_tags__5Djc0\",\"important\":\"todo_important__HuP8_\",\"done\":\"todo_done__UCNS5\",\"link\":\"todo_link__26S49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"link_link__24NwO\",\"home\":\"link_home__3VjwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"add-panel_container__1rCVJ\",\"close\":\"add-panel_close__2vvVv\",\"add\":\"add-panel_add__ow6p-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__Q80XR\",\"checkbox\":\"input_checkbox__2q5gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list-item_container__2foxa\",\"input\":\"list-item_input__ehviK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"list_header__Nmr5A\",\"container\":\"list_container__2bJAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__3Eo3S\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Link } from \"react-router-dom\";\nimport styles from \"./link.module.scss\";\nimport \"./link-colors.scss\";\n\nexport default function LinkButton ({\n    href,\n    title,\n    color,\n    classname\n}) {\n\n    const checkColor = color === \"green\" || color === \"red\" || color === \"dark\" ? color : \"default\" ;\n\n    return (\n        <Link\n            to={href}\n            className={`${styles.link} ${checkColor} ${classname}`}\n        >\n            {title}\n        </Link>\n    );\n}\n\n","import LinkButton from \"./Link\";\nimport styles from \"./link.module.scss\";\n\nexport default function HomeButton ({classname}) {\n\n    return (\n        <LinkButton title=\"Home\" href=\"/\" color=\"dark\" classname={`${styles.home} ${classname}`}/> \n    );\n}\n\n","const todos = [\n    {\n      id: \"1\",\n      title: \"List my TODOs\",\n      done: true,\n      important: true,\n      description: \"As a user I would like to list my current todos\"\n    },\n    {\n      id: \"2\",\n      title: \"Change a TODO state\",\n      done: false,\n      important: true,\n      description: \"As a user I would like to change a todo state by checking a \\\"box\\\"\"\n    },\n    {\n      id: \"3\",\n      title: \"Detail a TODO\",\n      done: true,\n      important: false,\n      description: \"As a user I would like to display one of my todo in a separate or dedicated view. This todo will contain its title and a description (which is a new information not shown in the previous view).\"\n    },\n    {\n      id: \"4\",\n      title: \"Add a new TODO\",\n      done: false,\n      important: false,\n      description: \"As a user I would like to add a new todo in my list\"\n    },\n  ];\n  \n  export default todos;\n  ","import { useParams } from \"react-router-dom\";\nimport HomeButton from \"../components/link/HomeButton\";\nimport todos from \"../data/todos\";\nimport styles from '../style/todo.module.scss';\n\nexport default function Todo () {\n\n    const { id } = useParams();\n\n    const { title, description, important, done } = todos.find(item => item.id === id)\n\n    return (\n        <div className={styles.container}>\n            <HomeButton classname={styles.link}/> \n            { (important || done ) && \n                <div className={styles.tags}>\n                    { important &&  <span className={styles.important}>important</span> }\n                    { done &&  <span className={styles.done}>This task is done</span> }\n                </div>\n            }\n            <h1>{title}</h1>\n            <p>{description}</p>\n            \n        </div>\n    );\n}\n","import styles from \"./button.module.scss\";\n\nexport default function ActionButton ({title, classname, ...props}) {\n\n    return (\n        <button {...props} className={`${styles.btn} ${classname}`}>{title}</button>\n    );\n}\n\n","import styles from \"./input.module.scss\";\n\nexport default function Input ({type, name, label, ...props}) {\n\n    return (\n        <>\n            { type !== \"checkbox\" ? \n                <div className={styles.input}>\n                    <label for={name}>{label}</label> \n                    { type === \"textarea\" ? \n                        <textarea id={name} name={name} {...props}></textarea>\n                    :\n                        <input type={type} name={name} id={name} {...props}/>\n                    }\n                    \n                </div>\n\n            : \n                <div className={styles.checkbox}>\n                    <input type={type} name={name} id={name} {...props}/>\n                    <label for={name}>{label}</label>\n                </div>\n            }\n        </>\n    );\n}\n\n","import { useState } from \"react\";\nimport ActionButton from \"../button/Button\";\nimport Input from \"../input/Input\";\nimport styles from \"./add-panel.module.scss\";\n\nexport default function AddPanel ({addTodo, handleClose}) {\n\n    const [formValues, setFormValues] = useState({title : \"\", description : \"\", important : false});\n\n    const handleInputChange = (event) => {\n        const value = event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n        setFormValues({ ...formValues, [event.target.name] : value });\n    }\n\n    const createTodo = () => {\n        return {\n            id : JSON.stringify(Date.now()),\n            done: false,\n            ...formValues\n        }\n    }\n    \n    return (\n        <aside className={styles.container}>\n            <ActionButton \n                title=\"Close\"\n                onClick={handleClose}\n                classname={styles.close}\n            />\n            <h2>Add To-do</h2>\n            <form>\n                <Input \n                    type=\"text\" \n                    label=\"Title\" \n                    name=\"title\" \n                    placeholder=\"Title...\" \n                    required \n                    value={formValues.title}\n                    onChange={handleInputChange}\n                />\n                <Input \n                    type=\"textarea\" \n                    name=\"description\" \n                    rows=\"10\" \n                    placeholder=\"Add your description....\"\n                    value={formValues.description}\n                    onChange={handleInputChange}\n                />\n                <Input \n                    type=\"checkbox\" \n                    name=\"important\" \n                    label=\"Important\" \n                    checked={formValues.important}\n                    onChange={handleInputChange}\n                />\n            </form>\n            <ActionButton title=\"Add Todo\" classname={styles.add} onClick={ () => addTodo(createTodo())}/>\n        </aside>\n    );\n}\n","import LinkButton from \"../link/Link\";\nimport styles from \"./list-item.module.scss\";\n\nexport default function ListItem ({\n    todo,\n    handleChange\n}) {\n\n    const { id, title, done, important } = todo ;\n\n    const opacity = done ? \"30%\" : \"100%\"\n\n    const style = {\n        opacity:opacity\n    };\n    \n    return (\n        <div className={styles.container} style={style}>\n            <div className={styles.input}>\n                <input type=\"checkbox\" id={id} name={id} defaultChecked={done} onChange={handleChange}/>\n                <label for={id}>{title}</label>   \n            </div>\n            <LinkButton title=\"See More\" href={`/todo/${id}`}/> \n            { important &&  <span>!!!</span> }\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport AddPanel from \"../components/add-panel/AddPanel\";\nimport ActionButton from \"../components/button/Button\";\nimport ListItem from '../components/list-item/ListItem';\nimport todos from \"../data/todos\";\nimport styles from \"../style/list.module.scss\"\n\nexport default function TodoList () {\n\n  const [todoList, setTodoList] = useState(todos);\n  const [isDisplayed, setIsDisplayed] = useState(false);\n\n\n  const addTodo = (todo) => {\n    setTodoList([todo, ...todoList])\n  }\n\n  const doneItems = todoList.filter(item => item.done);\n  const todoItems = todoList.filter(item => !item.done);\n\n\n  const compare = (todoA, todoB) => {\n    if (todoA.important === todoB.important) return 0\n    if (todoA.important) return -1\n    return 1\n  }\n\n  const sortedList = todoItems.sort(compare).concat(doneItems); \n\n  const changeTodoState = (id, checked) => {\n    const updatedTodoList = todoList.map((todo) => {\n      if (todo.id === id) return { ...todo, done : checked};\n      return todo ;\n    })\n    setTodoList(updatedTodoList);\n  }\n\n  return (\n    <>\n      <header className={styles.header}>\n        <h1>To-Doums</h1>\n        <ActionButton \n          title=\"Add new todo\"\n          onClick={() => setIsDisplayed(true)}\n        />\n      </header>\n      <main className={styles.container}>\n        <section style={isDisplayed ? {width:\"50%\"} : {width:\"100%\"}}>\n          {sortedList.map((item) => (\n            <ListItem key={item.id} todo={item} handleChange={() => changeTodoState(item.id, !item.done)}/>\n          ))}\n        </section>\n        { isDisplayed && <AddPanel addTodo={addTodo} handleClose={() => setIsDisplayed(false)}/> }\n      </main>\n    </>\n  );\n}\n","import { Routes, Route, HashRouter } from \"react-router-dom\";\nimport Todo from \"./pages/Todo\";\nimport TodoList from \"./pages/TodoList\";\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<TodoList />}/>\n        <Route path=\"/todo/:id\" element={<Todo />}/>\n      </Routes>\n    </HashRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './style/globals.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}